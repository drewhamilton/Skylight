apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

ext.artifact = 'skylight-rx'
apply from: 'publish.gradle'

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  api project(':skylight')

  api "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-inline:2.28.2'
  testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

// TODO WORKAROUND: Get this to work in its own file
//region Compatibility
configurations {
  baseline
  latest
}

dependencies {
  baseline("$publishedGroupId:$artifact:$compatibleVersion") {
    transitive false
    force true
  }
  latest project(path: ":$project.name")
}

apply plugin: 'me.champeau.gradle.japicmp'
//noinspection UnnecessaryQualifiedReference
task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
  oldClasspath = configurations.baseline.incoming.artifactView { config ->
    config.attributes { container ->
      container.attribute(Attribute.of("artifactType", String.class), "jar")
    }
  }.artifacts.artifactFiles

  newClasspath = configurations.latest.incoming.artifactView { config ->
    config.attributes { container ->
      container.attribute(Attribute.of("artifactType", String.class), "jar")
    }
  }.artifacts.artifactFiles

  onlyBinaryIncompatibleModified true
  failOnModification failIfIncompatible
  txtOutputFile = file("$buildDir/reports/japi.txt")
}

check.dependsOn(japicmp)
build.dependsOn(check)
//endregion
