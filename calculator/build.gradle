apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

ext {
    artifact = 'skylight-calculator'
    bintrayName = 'Skylight-calculator'
    libraryName = 'Skylight Calculator'

    libraryDescription = 'An implementation of Skylight that calculates skylight information locally.'

    compatibility = [
        ignoreMissingClasses: false,
        excludedModules: []
    ]
}
apply from: '../gradle/publish.gradle'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    api project(':skylight')

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    testImplementation 'junit:junit:4.12'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

// TODO WORKAROUND: Get this to work in its own file
//region Compatibility
configurations {
    baseline
    latest
}

dependencies {
    baseline("$publishedGroupId:$artifact:$compatibleVersion") {
        transitive false
        force true
    }
    latest project(path: ":$project.name")
}

apply plugin: 'me.champeau.gradle.japicmp'
//noinspection UnnecessaryQualifiedReference
task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath = configurations.baseline.incoming.artifactView { config ->
        config.attributes { container ->
            container.attribute(Attribute.of("artifactType", String.class), "jar")
        }
    }.artifacts.artifactFiles

    newClasspath = configurations.latest.incoming.artifactView { config ->
        config.attributes { container ->
            container.attribute(Attribute.of("artifactType", String.class), "jar")
        }
    }.artifacts.artifactFiles

    onlyBinaryIncompatibleModified true
    failOnModification failIfIncompatible
    txtOutputFile = file("$buildDir/reports/japi.txt")

    // TODO WORKAROUND: Can't find Skylight, not sure why
    ignoreMissingClasses true
}

check.dependsOn(japicmp)
build.dependsOn(check)
//endregion
